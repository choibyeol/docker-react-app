sudo: required # 관리자 권한

language: generic # 언어(플랫폼) 선택

services: # 도커 환경 구성
  - docker

before_install: # 스크립트를 실행할 수 있는 환경 구성
  - echo "Start creating an image with dockerfile"
  - docker build -t choibyeol/docker-react-app -f Dockerfile.dev .

script: # 실행할 스크립트(테스트 실행)
  - docker run -e CI=true choibyeol/docker-react-app npm run test -- --coverage
    # CI=true 없으면 오류

deploy:
  provider: elasticbeanstalk # 외부 서비스 표시 (s3, eb, firebase 등)
  region: 'ap-northeast-2' # 현재 사용하고 있는 AWS 서비스가 위치하고 있는 물리적 장소
  app: 'docker-reactp-app' # 생성된 애플리케이션 이름
  env: 'DockerReactApp-env' # 환경 이름. 생략하면 자동으로 애플리케이션 이름-env
  bucket_name: 'elasticbeanstalk-ap-northeast-2-972153559337' # 해당 elasticbeanstalk을 위한 s3 버켓 이름
  bucket_path: 'docker-react-app' # 애플리케이션 이름과 동일
  on:
    branch: master # 어떤 브랜치에 push를 할 때 AWS에 배포를 할 것인지

  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_ACCESS_KEY
